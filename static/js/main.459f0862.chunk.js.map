{"version":3,"sources":["pages/Dashboard/Level/assets sync /^/Level_.*/.png$","pages/Dashboard/Level/assets/Level_0.png","pages/Dashboard/Level/assets/Level_1.png","pages/Dashboard/Level/assets/Level_10.png","pages/Dashboard/Level/assets/Level_11.png","pages/Dashboard/Level/assets/Level_12.png","pages/Dashboard/Level/assets/Level_13.png","pages/Dashboard/Level/assets/Level_14.png","pages/Dashboard/Level/assets/Level_15.png","pages/Dashboard/Level/assets/Level_16.png","pages/Dashboard/Level/assets/Level_17.png","pages/Dashboard/Level/assets/Level_18.png","pages/Dashboard/Level/assets/Level_19.png","pages/Dashboard/Level/assets/Level_2.png","pages/Dashboard/Level/assets/Level_20.png","pages/Dashboard/Level/assets/Level_21.png","pages/Dashboard/Level/assets/Level_3.png","pages/Dashboard/Level/assets/Level_4.png","pages/Dashboard/Level/assets/Level_5.png","pages/Dashboard/Level/assets/Level_6.png","pages/Dashboard/Level/assets/Level_7.png","pages/Dashboard/Level/assets/Level_8.png","pages/Dashboard/Level/assets/Level_9.png","redux/ducks/authentication.ts","redux/ducks/dashboard.ts","constants/constants.ts","services/getLessons.ts","redux/ducks/editor.ts","redux/rootReducer.ts","redux/store.ts","utils/utils.ts","components/Loader/Loader.tsx","services/uploadImage.ts","services/uploadMarkdown.ts","pages/Editor/Editor.tsx","services/authentication.ts","pages/Signin/Signin.tsx","pages/Signin/index.ts","pages/Dashboard/Level/Lesson/Lesson.jsx","pages/Dashboard/Level/Level.jsx","pages/Dashboard/Dashboard.jsx","pages/Preview/Preview.tsx","App.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","AuthenticationActionTypes","DashboardActionTypes","initialState","isAuthenticated","userData","inputFieldsState","userName","password","setAuthenticationState","value","type","SET_AUTHENTICATION","API_URL","getLessons","endPoint","a","fetch","window","token","headers","Authorization","authType","rawResponse","ok","json","response","EditorActionTypes","data","accountInfo","selectedlevel","levelIndex","lessonIndex","setData","SET_DATA","storedValues","rootReducer","combineReducers","authenticationReducer","state","action","SET_SIGNIN_STATE","dashboardReducer","SET_SELECTED_LEVEL","SET_ACCOUNT_INFO","SET_ACCOUNT_IMAGE","accountImage","payload","editorReducer","SET_VALUES","store","createStore","applyMiddleware","thunk","getTokenFromLocalStorage","localStorage","checkUserPassword","test","emptyChecker","calculateLevelHeight","innerWidth","override","css","Loader","className","size","color","loading","uploadImage","method","body","image","uploadMarkdown","level","lesson","JSON","stringify","Quill","ReactQuill","Font","import","whitelist","register","Editor","location","useLocation","useState","isDesktop","setIsDesktop","useSelector","values","setValues","counter","setCounter","counterImage","setCounterImage","currentInput","setCurrentInput","imageLink","setImageLink","dispatch","useDispatch","modules","toolbar","list","indent","header","background","font","align","formats","handleChange","handleInputImageChange","event","newValues","before","slice","after","length","result","target","handleInputChange","content","delta","source","editor","ops","insert","video","match","useEffect","onImageChange","files","img","imageName","name","formData","FormData","append","handleSend","console","log","pathArray","pathname","split","comics","comics_type","Number","alert","CssBaseline","Container","maxWidth","FormControlLabel","control","Checkbox","checked","onChange","label","el","i","style","marginBottom","key","theme","onFocus","IconButton","aria-label","onClick","handleDeleteClick","fontSize","display","justifyContent","Button","variant","to","setEditorValues","signin","useStyles","makeStyles","paper","paddingTop","spacing","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","marginTop","submit","Signin","withRouter","history","classes","isSendingRequest","setIsSendingRequest","email","setEmail","setPassword","errorMessage","setErrorMessage","isErrorEmail","setIsErrorEmail","isErrorPassword","setIsErrorPassword","onChangeHandler","setter","validator","errorSetter","onSigninClick","username","push","component","Avatar","Typography","noValidate","TextField","error","required","fullWidth","autoComplete","helperText","autoFocus","disabled","Grid","container","justify","CircularProgress","Lesson","idx","Level","levelData","children","initialLevelHeight","height","currentStyles","setCurrentStyles","isActive","setActiveState","ulRef","createRef","description","alt","src","require","styles","current","getBoundingClientRect","ref","Dashboard","setInitialLevelHeight","renderLevels","useCallback","lessons","handleResize","addEventListener","removeEventListener","Preview","markup","dangerouslySetInnerHTML","__html","App","isLoaded","setLoadedState","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.459f0862.chunk.js","sourcesContent":["var map = {\n\t\"./Level_0.png\": 277,\n\t\"./Level_1.png\": 278,\n\t\"./Level_10.png\": 279,\n\t\"./Level_11.png\": 280,\n\t\"./Level_12.png\": 281,\n\t\"./Level_13.png\": 282,\n\t\"./Level_14.png\": 283,\n\t\"./Level_15.png\": 284,\n\t\"./Level_16.png\": 285,\n\t\"./Level_17.png\": 286,\n\t\"./Level_18.png\": 287,\n\t\"./Level_19.png\": 288,\n\t\"./Level_2.png\": 289,\n\t\"./Level_20.png\": 290,\n\t\"./Level_21.png\": 291,\n\t\"./Level_3.png\": 292,\n\t\"./Level_4.png\": 293,\n\t\"./Level_5.png\": 294,\n\t\"./Level_6.png\": 295,\n\t\"./Level_7.png\": 296,\n\t\"./Level_8.png\": 297,\n\t\"./Level_9.png\": 298\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 276;","module.exports = __webpack_public_path__ + \"static/media/Level_0.c3bcdebc.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_1.171d172d.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_10.4cf8222f.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_11.e81ab8d2.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_12.987863ca.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_13.1f8dc518.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_14.530d9d6a.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_15.a7cd0ce6.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_16.7ed1f2bb.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_17.c9f185a1.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_18.2240cfdd.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_19.62946caa.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_2.0e4671f2.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_20.4f9aad43.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_21.da4b33e2.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_3.4a9e83a3.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_4.f81ddaa3.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_5.6d843d4e.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_6.06290c4c.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_7.48842adc.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_8.ed6af528.png\";","module.exports = __webpack_public_path__ + \"static/media/Level_9.dbcf73a3.png\";","import { Reducer, ActionCreator } from 'redux';\r\n\r\nenum AuthenticationActionTypes {\r\n  SET_AUTHENTICATION = 'authentication/SET_AUTHENTICATION',\r\n  SET_SIGNIN_STATE = 'authentication/SET_SIGNIN_STATE',\r\n}\r\n\r\nexport type AuthenticationReducerState = {\r\n  isAuthenticated: boolean;\r\n  userData: {};\r\n  inputFieldsState: {\r\n    userName: string | boolean | null;\r\n    password: string | boolean | null;\r\n  };\r\n};\r\n\r\nconst initialState: AuthenticationReducerState = {\r\n  isAuthenticated: false,\r\n  userData: {},\r\n  inputFieldsState: {\r\n    userName: null,\r\n    password: null,\r\n  },\r\n};\r\n\r\ntype setAuthenticationStateAction = {\r\n  type: AuthenticationActionTypes.SET_AUTHENTICATION;\r\n  isAuthenticated: boolean;\r\n};\r\n\r\nexport const setAuthenticationState: ActionCreator<setAuthenticationStateAction> = (\r\n  value: boolean\r\n) => ({\r\n  type: AuthenticationActionTypes.SET_AUTHENTICATION,\r\n  isAuthenticated: value,\r\n});\r\n\r\ntype setInputFieldsStateAction = {\r\n  type: AuthenticationActionTypes.SET_SIGNIN_STATE;\r\n  inputFieldsState: any;\r\n};\r\n\r\nexport const setInputFieldsState: ActionCreator<setInputFieldsStateAction> = (\r\n  state: any\r\n) => ({\r\n  type: AuthenticationActionTypes.SET_SIGNIN_STATE,\r\n  inputFieldsState: state,\r\n});\r\n\r\ntype AuthenticationActions =\r\n  | setInputFieldsStateAction\r\n  | setAuthenticationStateAction;\r\n\r\nexport const authenticationReducer: Reducer<\r\n  AuthenticationReducerState,\r\n  AuthenticationActions\r\n> = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AuthenticationActionTypes.SET_SIGNIN_STATE:\r\n      return {\r\n        ...state,\r\n        inputFieldsState: action.inputFieldsState,\r\n      };\r\n    case AuthenticationActionTypes.SET_AUTHENTICATION:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: action.isAuthenticated,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Reducer, ActionCreator } from 'redux';\r\nimport { getLessons } from '../../services/getLessons';\r\nimport getAccountInfo from '../../services/getAccountInfo';\r\nimport { AppDispatch } from '../rootReducer';\r\n\r\nenum DashboardActionTypes {\r\n  SET_DATA = 'dashboard/SET_DATA',\r\n  SET_ACCOUNT_INFO = 'dashboard/SET_ACCOUNT_INFO',\r\n  SET_ACCOUNT_IMAGE = 'dashboard/SET_ACCOUNT_IMAGE',\r\n  SET_SELECTED_LEVEL = 'dashboard/SET_SELECTED_LEVEL',\r\n}\r\n\r\nexport type DashboardReducerState = {\r\n  data: any;\r\n  accountInfo: any;\r\n  // accountImage: any;\r\n  selectedlevel: {\r\n    levelIndex: number | null;\r\n    lessonIndex: number | null;\r\n  };\r\n};\r\n\r\nconst initialState: DashboardReducerState = {\r\n  data: null,\r\n  accountInfo: null,\r\n  // accountImage: require('../../assets/img/anonymous.svg'),\r\n  selectedlevel: {\r\n    levelIndex: null,\r\n    lessonIndex: null,\r\n  },\r\n};\r\n\r\ntype setDataAction = {\r\n  type: DashboardActionTypes.SET_DATA;\r\n  data: any;\r\n};\r\n\r\nexport const setData: ActionCreator<setDataAction> = (data: any) => ({\r\n  type: DashboardActionTypes.SET_DATA,\r\n  data,\r\n});\r\n\r\nexport const fetchData = () => async (dispatch: AppDispatch) => {\r\n  const data = await getLessons('/api/lessons/levels');\r\n  if (data) {\r\n    dispatch(setData(data));\r\n  }\r\n};\r\n\r\ntype setAccountDataAction = {\r\n  type: DashboardActionTypes.SET_ACCOUNT_INFO;\r\n  accountInfo: any;\r\n};\r\n\r\nexport const setAccountData: ActionCreator<setAccountDataAction> = (\r\n  accountInfo: any\r\n) => ({\r\n  type: DashboardActionTypes.SET_ACCOUNT_INFO,\r\n  accountInfo: accountInfo,\r\n});\r\n\r\ntype setAccountImageAction = {\r\n  type: DashboardActionTypes.SET_ACCOUNT_IMAGE;\r\n  payload: any;\r\n};\r\n\r\nexport const setAccountImage: ActionCreator<setAccountImageAction> = (\r\n  accountImage: any\r\n) => ({\r\n  type: DashboardActionTypes.SET_ACCOUNT_IMAGE,\r\n  payload: accountImage,\r\n});\r\n\r\nexport const fetchAccountData = () => async (dispatch: AppDispatch) => {\r\n  const accountInfo = await getAccountInfo();\r\n  if (accountInfo) {\r\n    dispatch(setAccountData(accountInfo));\r\n  }\r\n};\r\n\r\ntype setSelectedLevelAction = {\r\n  type: DashboardActionTypes.SET_SELECTED_LEVEL;\r\n  selectedlevel: any;\r\n};\r\n\r\nexport const setSelectedLevel: ActionCreator<setSelectedLevelAction> = (\r\n  selectedlevel: any\r\n) => ({\r\n  type: DashboardActionTypes.SET_SELECTED_LEVEL,\r\n  selectedlevel,\r\n});\r\n\r\nexport const updateDashboardData = async (dispatch: AppDispatch) => {\r\n  const newAccountInfo = await getAccountInfo();\r\n  const updatedDashboardData = await getLessons('/api/lessons/levels');\r\n  dispatch(setData(updatedDashboardData));\r\n  dispatch(setAccountData(newAccountInfo));\r\n};\r\n\r\ntype DashboardActions =\r\n  | setDataAction\r\n  | setAccountDataAction\r\n  | setAccountImageAction\r\n  | setSelectedLevelAction;\r\n\r\nexport const dashboardReducer: Reducer<\r\n  DashboardReducerState,\r\n  DashboardActions\r\n> = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case DashboardActionTypes.SET_DATA:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      };\r\n    case DashboardActionTypes.SET_SELECTED_LEVEL:\r\n      return {\r\n        ...state,\r\n        selectedlevel: action.selectedlevel,\r\n      };\r\n    case DashboardActionTypes.SET_ACCOUNT_INFO:\r\n      return {\r\n        ...state,\r\n        accountInfo: action.accountInfo,\r\n      };\r\n    case DashboardActionTypes.SET_ACCOUNT_IMAGE:\r\n      return {\r\n        ...state,\r\n        accountImage: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const API_URL = 'https://chesstery.com';\r\n","import { API_URL } from '../constants/constants';\r\n\r\nconst getHeaders = (token: string) => {\r\n  if (token) {\r\n    return {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `${window.authType} ${window.token}`,\r\n      },\r\n    };\r\n  } else\r\n    return {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n};\r\n\r\nexport const getLessons = async (endPoint: string) => {\r\n  try {\r\n    const rawResponse = await fetch(\r\n      API_URL + endPoint + '/',\r\n      //@ts-ignore\r\n      getHeaders(window.token)\r\n    );\r\n    if (rawResponse.ok) {\r\n      const response = await rawResponse.json();\r\n      return response;\r\n    }\r\n    return false;\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n","import { Reducer, ActionCreator } from 'redux';\r\n\r\nenum EditorActionTypes {\r\n  SET_VALUES = 'editor/SET_VALUES',\r\n}\r\n\r\nexport type EditorReducerState = {\r\n  storedValues: null | string[];\r\n};\r\n\r\nconst initialState: EditorReducerState = {\r\n  storedValues: null,\r\n};\r\n\r\ntype setEditorValuesAction = {\r\n  type: EditorActionTypes.SET_VALUES;\r\n  storedValues: string[];\r\n};\r\n\r\nexport const setEditorValues: ActionCreator<setEditorValuesAction> = (\r\n  storedValues: string[]\r\n) => ({\r\n  type: EditorActionTypes.SET_VALUES,\r\n  storedValues: storedValues,\r\n});\r\n\r\ntype EditorActions = setEditorValuesAction;\r\n\r\nexport const editorReducer: Reducer<EditorReducerState, EditorActions> = (\r\n  state = initialState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case EditorActionTypes.SET_VALUES:\r\n      return {\r\n        ...state,\r\n        storedValues: action.storedValues,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers, AnyAction } from 'redux';\r\nimport {\r\n  authenticationReducer,\r\n  AuthenticationReducerState,\r\n} from './ducks/authentication';\r\nimport { dashboardReducer, DashboardReducerState } from './ducks/dashboard';\r\nimport { editorReducer, EditorReducerState } from './ducks/editor';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\n\r\nexport type AppState = {\r\n  authenticationReducer: AuthenticationReducerState;\r\n  dashboardReducer: DashboardReducerState;\r\n  editorReducer: EditorReducerState;\r\n};\r\n\r\nexport type AppDispatch = ThunkDispatch<AppState, any, AnyAction>;\r\n\r\nexport const rootReducer = combineReducers<AppState>({\r\n  authenticationReducer: authenticationReducer,\r\n  dashboardReducer: dashboardReducer,\r\n  editorReducer: editorReducer,\r\n});\r\n","import { createStore, applyMiddleware, Store } from 'redux';\r\nimport { rootReducer } from './rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const store: Store = createStore(rootReducer, applyMiddleware(thunk));\r\n","export const saveTokenToLocalStorage = (token: string) => {\r\n  localStorage.token = token;\r\n};\r\n\r\ndeclare global {\r\n  interface Window {\r\n    token: string;\r\n    authType: string;\r\n  }\r\n}\r\n\r\nexport const getTokenFromLocalStorage = () => {\r\n  window.token = localStorage.token;\r\n};\r\n\r\nexport const checkUserEmail = (email: string) => {\r\n  if (\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n      email\r\n    )\r\n  )\r\n    return true;\r\n  return false;\r\n};\r\n\r\nexport const checkUserPassword = (password: string) => {\r\n  if (/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/gm.test(password))\r\n    return true;\r\n  return false;\r\n};\r\n\r\nexport const emptyChecker = (value: any) => !!value;\r\n\r\nexport const calculateLevelHeight = (innerWidth: number) => {\r\n  if (innerWidth > 1440) return 145;\r\n  if (innerWidth <= 1440 && innerWidth > 1215) return 160;\r\n  if (innerWidth <= 1215 && innerWidth > 1110) return 180;\r\n  if (innerWidth <= 1100 && innerWidth > 1010) return 200;\r\n  if (innerWidth <= 1010 && innerWidth > 835) return 150;\r\n  if (innerWidth <= 835 && innerWidth > 640) return 170;\r\n  if (innerWidth <= 640 && innerWidth > 548) return 190;\r\n  if (innerWidth <= 548 && innerWidth > 492) return 200;\r\n  if (innerWidth <= 492 && innerWidth > 400) return 220;\r\n  if (innerWidth <= 400) return 300;\r\n};\r\n","import React from 'react';\r\nimport { css } from '@emotion/core';\r\nimport { RingLoader } from 'react-spinners';\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 100px auto;\r\n  border-color: red;\r\n`;\r\n\r\nexport const Loader: React.FC = () => {\r\n  return (\r\n    <div className=\"sweet-loading\">\r\n      <RingLoader css={override} size={200} color={'#1438CE'} loading={true} />\r\n    </div>\r\n  );\r\n};\r\n","import { API_URL } from '../constants/constants';\r\n\r\ntype Response = {\r\n  id: number;\r\n  image: string;\r\n};\r\n\r\nexport const uploadImage = async (data: any) => {\r\n  try {\r\n    const rawResponse = await fetch(`${API_URL}/api/upload_any_image`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Token ${window.token}`,\r\n      },\r\n      body: data,\r\n    });\r\n    if (rawResponse.ok) {\r\n      const response: Response = await rawResponse.json();\r\n      return response.image;\r\n    }\r\n    return false;\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n","import { API_URL } from '../constants/constants';\r\n\r\nexport const uploadMarkdown = async (\r\n  data: any,\r\n  level: number,\r\n  lesson: number\r\n) => {\r\n  try {\r\n    const rawResponse = await fetch(\r\n      `${API_URL}/api/lessons/levels/${level}/${lesson}/upload_comics/`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Token ${window.token}`,\r\n          'content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      }\r\n    );\r\n    if (rawResponse.ok) {\r\n      const response = await rawResponse.json();\r\n      return true;\r\n    }\r\n    return false;\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport ReactQuill from 'react-quill';\r\nimport { setEditorValues } from '../../redux/ducks/editor';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { uploadImage } from '../../services/uploadImage';\r\nimport { uploadMarkdown } from '../../services/uploadMarkdown';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './Editor.scss';\r\n\r\n//@ts-ignore\r\nconst Quill = ReactQuill.Quill;\r\nvar Font = Quill.import('formats/font');\r\nFont.whitelist = ['Nunito', 'Roboto', 'Raleway', 'Montserrat', 'Lato', 'Rubik'];\r\nQuill.register(Font, true);\r\n\r\nexport const Editor = () => {\r\n  let location = useLocation();\r\n  const [isDesktop, setIsDesktop] = useState<boolean>(true);\r\n  const { storedValues } = useSelector((state: any) => state.editorReducer);\r\n  const [values, setValues] = useState<any>(storedValues ? storedValues : []);\r\n  const [counter, setCounter] = useState<number>(0);\r\n  const [counterImage, setCounterImage] = useState<number>(0);\r\n  const [currentInput, setCurrentInput] = useState<number>(0);\r\n  const [imageLink, setImageLink] = useState<string>('~~upload smth~~');\r\n  const dispatch = useDispatch();\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n      [\r\n        { list: 'ordered' },\r\n        { list: 'bullet' },\r\n        { indent: '-1' },\r\n        { indent: '+1' },\r\n      ],\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n      [{ color: [] }, { background: [] }],\r\n      [{ font: Font.whitelist }],\r\n      [{ align: [] }],\r\n      ['link', 'image', 'video'],\r\n    ],\r\n  };\r\n\r\n  const formats = [\r\n    'header',\r\n    'font',\r\n    'bold',\r\n    'italic',\r\n    'underline',\r\n    'strike',\r\n    'blockquote',\r\n    'background',\r\n    'code',\r\n    'script',\r\n    'list',\r\n    'bullet',\r\n    'indent',\r\n    'link',\r\n    'image',\r\n    'color',\r\n    'video',\r\n    'align',\r\n    'clean',\r\n  ];\r\n\r\n  const handleChange = () => {\r\n    setIsDesktop((isDesktop) => !isDesktop);\r\n  };\r\n\r\n  const handleInputImageChange = (event: any) => {\r\n    const newValues = [...values];\r\n    const before = newValues.slice(0, currentInput);\r\n    const after = newValues.slice(currentInput + 1, newValues.length);\r\n\r\n    const result = event.target.value;\r\n\r\n    setValues([\r\n      ...before,\r\n      { ...newValues[currentInput], value: result },\r\n      ...after,\r\n    ]);\r\n  };\r\n\r\n  const handleInputChange = (\r\n    content: any,\r\n    delta: any,\r\n    source: any,\r\n    editor: any\r\n  ) => {\r\n    let result: any;\r\n    if (delta.ops[0].insert?.video) {\r\n      result = content;\r\n    } else if (delta.ops[0].insert?.image) {\r\n      result = content.match(/\\>(.*)\\<\\//)[1];\r\n    } else if (delta.ops[1]) {\r\n      result = content;\r\n    }\r\n    const newValues = [...values];\r\n    const before = newValues.slice(0, currentInput);\r\n    const after = newValues.slice(currentInput + 1, newValues.length);\r\n\r\n    if (result) {\r\n      setValues([\r\n        ...before,\r\n        { ...newValues[currentInput], value: result },\r\n        ...after,\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const saveValuesHandler = () => {\r\n    dispatch(setEditorValues(values));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (counter > 0) setValues(() => [...values, { type: 'quill', value: '' }]);\r\n  }, [counter]);\r\n\r\n  useEffect(() => {\r\n    if (counterImage > 0)\r\n      setValues(() => [...values, { type: 'image', value: '' }]);\r\n  }, [counterImage]);\r\n\r\n  const onImageChange = async (event: any) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      let img = event.target.files[0];\r\n      const imageName = event.target.files[0].name;\r\n      const formData = new FormData();\r\n      formData.append('file', img, imageName);\r\n      const response = await uploadImage(formData);\r\n      if (response) {\r\n        setImageLink(response);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = (i: number) => {\r\n    const newValues = [...values];\r\n    const before = newValues.slice(0, i);\r\n    const after = newValues.slice(i + 1, newValues.length);\r\n    setValues([...before, ...after]);\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    console.log(values);\r\n    const pathArray = location.pathname.split('/');\r\n    const level = pathArray[pathArray.length - 2];\r\n    const lesson = pathArray[pathArray.length - 1];\r\n    const response = await uploadMarkdown(\r\n      {\r\n        comics: values,\r\n        comics_type: isDesktop ? 'desktop_comics' : 'mobile_comics',\r\n      },\r\n      Number(level),\r\n      Number(lesson)\r\n    );\r\n    if (response) {\r\n      alert('Complete');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"xl\">\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={isDesktop}\r\n              onChange={handleChange}\r\n              name=\"checkedB\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Desktop\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={!isDesktop}\r\n              onChange={handleChange}\r\n              name=\"checkedB\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Mobile\"\r\n        />\r\n        {values.map((el: any, i: number) => (\r\n          <div style={{ marginBottom: '25px' }} key={`key-${i}`}>\r\n            {el.type === 'quill' ? (\r\n              <ReactQuill\r\n                theme=\"snow\"\r\n                value={el.value || ''}\r\n                onChange={handleInputChange}\r\n                onFocus={() => {\r\n                  setCurrentInput(i);\r\n                }}\r\n                modules={modules}\r\n                formats={formats}\r\n              />\r\n            ) : (\r\n              <input\r\n                value={el.value || ''}\r\n                onChange={handleInputImageChange}\r\n                onFocus={() => {\r\n                  setCurrentInput(i);\r\n                }}\r\n              />\r\n            )}\r\n            <IconButton\r\n              aria-label=\"delete\"\r\n              size=\"small\"\r\n              onClick={() => handleDeleteClick(i)}\r\n            >\r\n              <DeleteIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          </div>\r\n        ))}\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-around',\r\n            marginBottom: '25px',\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setCounter(counter + 1)}\r\n          >\r\n            добавить текст/видео\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setCounterImage(counterImage + 1)}\r\n          >\r\n            добавить изображение\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => console.log(values)}\r\n          >\r\n            выплюнуть в консоль резы\r\n          </Button>\r\n        </div>\r\n        <input\r\n          type=\"file\"\r\n          name=\"file\"\r\n          id=\"file\"\r\n          className=\"inputfile\"\r\n          onChange={onImageChange}\r\n        />\r\n        <input type=\"text\" value={imageLink} />\r\n        <div>\r\n          <Link to=\"/preview\" onClick={saveValuesHandler}>\r\n            посмотреть превью\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={handleSend}>\r\n            отправить на сервер\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import { API_URL } from '../constants/constants';\r\n\r\nexport const signin = async (body: ISigninBody) => {\r\n  try {\r\n    const rawResponse = await fetch(`${API_URL}/api-login/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n    if (!rawResponse.ok) return false;\r\n    const data = await rawResponse.json();\r\n    return data;\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { signin } from '../../services/authentication';\r\nimport {\r\n  checkUserEmail,\r\n  checkUserPassword,\r\n  getTokenFromLocalStorage,\r\n  saveTokenToLocalStorage,\r\n  emptyChecker,\r\n} from '../../utils/utils';\r\nimport { setAuthenticationState } from '../../redux/ducks/authentication';\r\nimport './Signin.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    paddingTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\ntype SigninProps = {\r\n  history: any;\r\n};\r\n\r\nconst Signin: React.FC<SigninProps> = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const [isSendingRequest, setIsSendingRequest] = useState<boolean>(false);\r\n  const [email, setEmail] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [errorMessage, setErrorMessage] = useState<string>('');\r\n  const [isErrorEmail, setIsErrorEmail] = useState<boolean>(false);\r\n  const [isErrorPassword, setIsErrorPassword] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setIsSendingRequest(false);\r\n  }, [errorMessage]);\r\n\r\n  const onChangeHandler = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    setter: React.Dispatch<React.SetStateAction<any>>,\r\n    validator: (value: string) => boolean,\r\n    errorSetter: React.Dispatch<React.SetStateAction<boolean>>\r\n  ) => {\r\n    setErrorMessage('');\r\n    const value = event.target.value;\r\n    if (validator(value)) errorSetter(false);\r\n    setter(event.target.value);\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    if (!email) setIsErrorEmail(true);\r\n    if (!password) setIsErrorPassword(true);\r\n  };\r\n\r\n  const onSigninClick = async () => {\r\n    validateInputs();\r\n    if (email && password && !errorMessage) {\r\n      if (isSendingRequest === false) {\r\n        setIsSendingRequest(true);\r\n        const response = await signin({\r\n          username: email,\r\n          password,\r\n        });\r\n        if (response.token) {\r\n          history.push('/');\r\n          saveTokenToLocalStorage(response.token);\r\n          getTokenFromLocalStorage();\r\n          dispatch(setAuthenticationState(true));\r\n        } else {\r\n          setErrorMessage('Пользователь не существует');\r\n        }\r\n        if (!response) setErrorMessage('Проблемы с сервером, попробуйте позже');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Signin\">\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Авторизация\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            {/* After rebasing auth backend with email-signin-logic remove emptyCheker and add emailChecker in emailTextField */}\r\n            <TextField\r\n              error={\r\n                isErrorEmail ||\r\n                (!!errorMessage &&\r\n                  errorMessage !== 'Проблемы с сервером, попробуйте позже')\r\n              }\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Электронный адрес (пока username)\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              value={email}\r\n              onChange={(event) =>\r\n                onChangeHandler(event, setEmail, emptyChecker, setIsErrorEmail)\r\n              }\r\n              helperText={\r\n                isErrorEmail &&\r\n                (email\r\n                  ? 'Проверьте правильность ввода электронного адреса'\r\n                  : 'Электронный адрес обязателен')\r\n              }\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              error={\r\n                isErrorPassword ||\r\n                (!!errorMessage &&\r\n                  errorMessage !== 'Проблемы с сервером, попробуйте позже')\r\n              }\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Пароль\"\r\n              value={password}\r\n              onChange={(event) =>\r\n                onChangeHandler(\r\n                  event,\r\n                  setPassword,\r\n                  checkUserPassword,\r\n                  setIsErrorPassword\r\n                )\r\n              }\r\n              helperText={\r\n                (isErrorPassword && 'Пароль обязателен') || errorMessage\r\n              }\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Button\r\n              disabled={!!errorMessage || isErrorEmail || isErrorPassword}\r\n              type=\"button\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={onSigninClick}\r\n            >\r\n              Войти\r\n            </Button>\r\n            {isSendingRequest && (\r\n              <Grid container justify=\"center\">\r\n                <CircularProgress />\r\n              </Grid>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Signin);\r\n","import Signin from './Signin';\r\n\r\nexport default Signin;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setSelectedLevel } from '../../../../redux/ducks/dashboard';\r\nimport './Lesson.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Lesson = ({ lesson, level, levelIndex, lessonIndex }) => {\r\n  const dispatch = useDispatch();\r\n  const { name, idx } = lesson;\r\n\r\n  const lessonLinkButtonHandler = () => {\r\n    dispatch(\r\n      setSelectedLevel({\r\n        lessonIndex,\r\n        levelIndex,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <li className=\"Lesson\">\r\n      <div className=\"Lesson-wrapper\">\r\n        <div className=\"Lesson-info\">\r\n          <p className=\"Lesson-index\">{lessonIndex + 1}</p>\r\n          <p className=\"Lesson-suptitle\">урок</p>\r\n          <p className=\"Lesson-title\">{name}</p>\r\n        </div>\r\n        <NavLink\r\n          to={`edit/${level}/${idx}`}\r\n          className=\"nav-link-reset\"\r\n          onClick={lessonLinkButtonHandler}\r\n        >\r\n          <button className=\"Lesson-btn btn-link\">\r\n            <div className=\"Lesson-btn__no-hover\">Редактировать</div>\r\n            <div className=\"Lesson-btn__hover\">Редактировать</div>\r\n          </button>\r\n        </NavLink>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Lesson;\r\n","import React, { useState, createRef, useEffect } from 'react';\r\nimport './Level.scss';\r\n\r\nconst Level = ({ levelData, children, initialLevelHeight }) => {\r\n  const [currentStyles, setCurrentStyles] = useState({\r\n    height: `${initialLevelHeight}px`,\r\n  });\r\n  const [isActive, setActiveState] = useState(false);\r\n\r\n  const ulRef = createRef();\r\n  const { level, name, description } = levelData;\r\n\r\n  const buttonClickHandler = () => {\r\n    let styles = { height: `${initialLevelHeight}px` };\r\n    if (!isActive) {\r\n      styles = {\r\n        height: `${\r\n          initialLevelHeight + ulRef.current.getBoundingClientRect().height\r\n        }px`,\r\n      };\r\n    }\r\n    setActiveState(!isActive);\r\n    setCurrentStyles(styles);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentStyles({ height: `${initialLevelHeight}px` });\r\n  }, [initialLevelHeight]);\r\n\r\n  return (\r\n    <div style={currentStyles} className=\"Level\">\r\n      <div className=\"Level-wrapper\">\r\n        <div className=\"Level__flex-wrapper\">\r\n          <div className=\"Level__info\">\r\n            <img\r\n              className=\"Level__img\"\r\n              alt=\"level\"\r\n              src={require(`./assets/Level_${level}.png`)}\r\n            />\r\n            <div className=\"level__info-wrapper\">\r\n              <p className=\"Level__title\">{`Уровень ${level}: ${name}`}</p>\r\n              <p className=\"Level__description\">{description}</p>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={buttonClickHandler}\r\n            className=\"Level__button\"\r\n            type=\"button\"\r\n          >\r\n            {isActive ? 'Скрыть' : 'Приступить'}\r\n          </button>\r\n        </div>\r\n        <div className=\"Level__list-wrapper\">\r\n          <ul ref={ulRef} className=\"Level__list\">\r\n            {children}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Level;\r\n","import React, { useEffect, useCallback, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchData } from '../../redux/ducks/dashboard';\r\nimport Lesson from './Level/Lesson/Lesson';\r\nimport Level from './Level/Level';\r\nimport { Loader } from '../../components/Loader/Loader';\r\nimport { calculateLevelHeight } from '../../utils/utils';\r\nimport './Dashboard.scss';\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const { data } = useSelector((state) => state.dashboardReducer);\r\n  const [initialLevelHeight, setInitialLevelHeight] = useState(\r\n    calculateLevelHeight(window.innerWidth)\r\n  );\r\n\r\n  const renderLevels = useCallback(\r\n    () =>\r\n      data.map((levelData, levelIndex) => {\r\n        return (\r\n          <Level\r\n            initialLevelHeight={initialLevelHeight}\r\n            levelData={levelData}\r\n            key={levelData.name}\r\n          >\r\n            {levelData.lessons.map((lesson, lessonIndex) => (\r\n              <Lesson\r\n                key={`${lesson.name}${lessonIndex}`}\r\n                levelIndex={levelIndex}\r\n                lessonIndex={lessonIndex}\r\n                level={levelData.level}\r\n                lesson={lesson}\r\n              />\r\n            ))}\r\n          </Level>\r\n        );\r\n      }),\r\n    [data, initialLevelHeight]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!data) dispatch(fetchData());\r\n    const handleResize = () => {\r\n      setInitialLevelHeight(calculateLevelHeight(window.innerWidth));\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Dashboard\">\r\n      <div className=\"Dashboard-title\">Межгалактический курс по шахматам</div>\r\n      {data ? renderLevels() : <Loader />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const Preview = () => {\r\n  const { storedValues } = useSelector((state: any) => state.editorReducer);\r\n\r\n  return (\r\n    <>\r\n      {storedValues &&\r\n        storedValues.map((markup: any) => (\r\n          <div dangerouslySetInnerHTML={{ __html: markup }} />\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getTokenFromLocalStorage } from './utils/utils';\r\nimport { setAuthenticationState } from './redux/ducks/authentication';\r\n\r\nimport { Loader } from './components/Loader';\r\nimport { Editor } from './pages/Editor';\r\nimport Signin from './pages/Signin';\r\nimport Dashboard from './pages/Dashboard/Dashboard';\r\nimport { Preview } from './pages/Preview';\r\n\r\nconst App = () => {\r\n  const [isLoaded, setLoadedState] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { isAuthenticated } = useSelector(\r\n    (state: any) => state.authenticationReducer\r\n  );\r\n\r\n  //@ts-ignore\r\n  useEffect(async () => {\r\n    getTokenFromLocalStorage();\r\n    if (window.token && !isAuthenticated) {\r\n      dispatch(setAuthenticationState(true));\r\n    }\r\n    setLoadedState(true);\r\n  }, []);\r\n\r\n  const renderRoutes = () => {\r\n    if (isAuthenticated) {\r\n      return (\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dashboard} />\r\n          <Route exact path=\"/edit/:id/:id\" component={Editor} />\r\n          <Route exact path=\"/preview/\" component={Preview} />\r\n        </Switch>\r\n      );\r\n    }\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Signin} />\r\n      </Switch>\r\n    );\r\n  };\r\n\r\n  return <div className=\"App\">{isLoaded ? renderRoutes() : <Loader />}</div>;\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\nimport './index.css';\r\nimport './css/index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}